<resources>
    <string name="app_name">mcLowicz International</string>
    <!-- TODO: Remove or change this placeholder text -->
    <string name="hello_blank_fragment">Hello blank fragment</string>

    <!-- Seetings -->
    <string name="fragment_settings_title">die Einstellungen</string>
    <string name="lang_pl">Polnische</string>
    <string name="lang_en">Englisch</string>
    <string name="lang_es">Spanisch</string>
    <string name="lang_de">Deutsche</string>
    <string name="lang_cz">Tschechisch</string>

    <string name="language_array_title">Sprache</string>

    <string-array name="language_array">
        <item>@string/lang_pl</item>
        <item>@string/lang_en</item>
        <item>@string/lang_es</item>
        <item>@string/lang_de</item>
        <item>@string/lang_cz</item>
    </string-array>

    <string name="theme_day">Tag</string>
    <string name="theme_night">Nacht</string>
    <string name="theme_array_title">Thema</string>
    <string-array name="theme_array">
        <item>@string/theme_day</item>
        <item>@string/theme_night</item>
    </string-array>

    <!-- Preference Titles -->
    <string name="ui">UI</string>
    <string name="theme_mode">Dark Mode</string>
    <string name="theme_mode_def_value">MODE_NIGHT_FOLLOW_SYSTEM</string>

    <!-- Dark Mode ListPreference -->
    <string-array name="theme_mode_entries">
        <item>Day mode</item>
        <item>Dark mode</item>
    </string-array>

    <string-array name="theme_mode_values">
        <item>Day mode</item>
        <item>Dark mode</item>
    </string-array>

    <string name="content">
Android – Ändern Sie die App-Sprache programmgesteuert mit Kotlin
\n\n
Android-Umgebung initiiert standardmäßig die Anwendungssprache bei den Systemeinstellungen.
\n\n
Möchten Sie Ihren Benutzern die Möglichkeit geben, aus Sicht der internen Anwendungseinstellungen zwischen mehr als einer Sprache zu wählen?
\n\n
Wenn die Antwort lautet, ja.
\n\n
Es sieht so aus, als ob Sie an der richtigen Stelle gelandet sind, an der Sie die Geheimnisse des Umgangs mit der folgenden Anforderung vertiefen werden:
\n\n
- Der Benutzer kann die Sprache in den Anwendungseinstellungen ändern
\n\n
Bei genauerer Betrachtung muss das Gebietsschema der Android-Anwendung das Gebietsschema überschreiben, das unter dem Betriebssystem des Benutzergeräts festgelegt ist.
\n\n
Mit dem folgenden Rezept kann der Benutzer vom Einstellungsbildschirm im Rahmen der gesamten Anwendung zwischen verschiedenen Sprachen wechseln, ohne die Systemgeräteeinstellungen zu berühren.
\n\n
Die Auswahl wird mit Hilfe der gemeinsamen Einstellungen lokal gespeichert. Logic überprüft die gewählte Sprache und aktualisiert das Anwendungsgebietsschema entsprechend den Benutzereinstellungen.
\n\n
Zunächst müssen für die weiteren Anwendungssprachen neue Ressourcendateien erstellt werden.
\n\n
Klicken Sie mit der rechten Maustaste auf das Verzeichnis "res", wählen Sie "Neu" und klicken Sie dann auf "Android-Ressourcendatei".
\n\n
Es öffnet das Fenster, in dem unter „Dateiname:“ „strings.xml“ eingegeben wird. Wählen Sie unter "Verfügbare Qualifikationsmerkmale:" "Gebietsschema" und klicken Sie auf das Symbol mit dem rechten Pfeil.
\n\n
Wählen Sie die gewünschte Sprache und die neue Datei „strings.xml“ wird generiert.
\n\n
Grundsätzlich hat jede Sprache eine separate Datei „strings.xml“, die durch den Stammverzeichnisnamen unter der Dateistruktur bestimmt wird.
\n\n
Nachdem wir zusätzliche Sprachressourcen hinzugefügt haben, müssen wir die Switching-Funktionalität erstellen.
    </string>
    <string name="settings_screen_button">Settings screen button</string>

</resources>