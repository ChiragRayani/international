<resources>
    <string name="app_name">mcLowicz International</string>
    <!-- TODO: Remove or change this placeholder text -->
    <string name="hello_blank_fragment">Hello blank fragment</string>

    <!-- Seetings -->
    <string name="fragment_settings_title">Settings</string>
    <string name="lang_pl">Polish</string>
    <string name="lang_en">English</string>
    <string name="lang_es">Spanish</string>
    <string name="lang_de">German</string>
    <string name="lang_cz">Czech</string>
    <string name="language_array_title">Language</string>
    <string-array name="language_array">
        <item>@string/lang_pl</item>
        <item>@string/lang_en</item>
        <item>@string/lang_es</item>
        <item>@string/lang_de</item>
        <item>@string/lang_cz</item>
    </string-array>

    <string name="theme_day">Day</string>
    <string name="theme_night">Night</string>
    <string name="theme_array_title">Theme</string>
    <string-array name="theme_array">
        <item>@string/theme_day</item>
        <item>@string/theme_night</item>
    </string-array>

    <!-- Preference Titles -->
    <string name="ui">UI</string>
    <string name="theme_mode">Dark Mode</string>
    <string name="theme_mode_def_value">MODE_NIGHT_FOLLOW_SYSTEM</string>

    <!-- Dark Mode ListPreference -->
    <string-array name="theme_mode_entries">
        <item>Day mode</item>
        <item>Dark mode</item>
    </string-array>

    <string-array name="theme_mode_values">
        <item>Day mode</item>
        <item>Dark mode</item>
    </string-array>

    <string name="content">
Android — Change The App Language Programmatically with Kotlin
\n\n
Android environment by default initiate application language upon the systems settings.
\n\n
Would you like to give your users possibility of choosing between more than one language from the internal application settings perspective ?
\n\n
If the answer is, yes.
\n\n
It looks like you landed in the right spot where you will deepen the secrets of how to handle the following requirement:
\n\n
- User is able to change the language from the application settings
\n\n
In deeper consideration, locale of the android application need to override locale that are set under the user device operation system.
\n\n
With the following recipe, user will be able to switch between different languages from the settings screen in the scope of whole application without touching the system device settings.
\n\n
Choice will be saved locally with help of shared preferences. Logic will check the chosen language and upon the user preferences it will update the application locale.
\n\n
First of all, new resource files need to be created for the further application languages.
\n\n
Right-click on the ‘res’ directory, choose “New” then click on “Android resource file”.
\n\n
It will prompt the window, where under the “File name:” type “strings.xml”. Under “Available qualifiers:” choose “Locale” and click on the right arrow icon.
\n\n
Select the required language and the new “strings.xml” file will be generated.
\n\n
Basically, each language will have separate “strings.xml” file, which will be determined by the root directory name under the file structure.
\n\n
After adding additional language resources we need to build switching functionality.
    </string>
    <string name="settings_screen_button">Settings screen button</string>

</resources>